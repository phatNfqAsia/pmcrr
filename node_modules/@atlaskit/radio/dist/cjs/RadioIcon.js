"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _radio = _interopRequireDefault(require("@atlaskit/icon/glyph/radio"));

var _Radio = require("./styled/Radio");

var RadioIcon =
/*#__PURE__*/
function (_Component) {
  (0, _inherits2.default)(RadioIcon, _Component);

  function RadioIcon() {
    (0, _classCallCheck2.default)(this, RadioIcon);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RadioIcon).apply(this, arguments));
  }

  (0, _createClass2.default)(RadioIcon, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          isActive = _this$props.isActive,
          isChecked = _this$props.isChecked,
          isDisabled = _this$props.isDisabled,
          isFocused = _this$props.isFocused,
          isHovered = _this$props.isHovered,
          isInvalid = _this$props.isInvalid;
      return _react.default.createElement(_Radio.IconWrapper, {
        isActive: isActive,
        isChecked: isChecked,
        isDisabled: isDisabled,
        isFocused: isFocused,
        isHovered: isHovered,
        isInvalid: isInvalid
      }, _react.default.createElement(_radio.default, {
        isActive: isActive,
        isHovered: isHovered,
        label: "",
        primaryColor: "inherit",
        secondaryColor: "inherit"
      }));
    }
  }]);
  return RadioIcon;
}(_react.Component);

exports.default = RadioIcon;